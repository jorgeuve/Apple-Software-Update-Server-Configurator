#!/usr/bin/env perl

############################################## 
#written originally by Iowa State University ITS
#http://tech.its.iastate.edu/macosx/howtos/sus.shtml
# 
#using Carsten Blüm Pashua development 
#http://www.bluem.net/en/mac/pashua/
#
#Rewritten and addapted for Reposado by Jorge Valencia
#http://www.jorgev.es
#
#Apple system administrator & support at Spanish National Cancer Research Centre
#http://www.cnio.es
#
#--improves--
#-Especially adapted to work with reposado server
#https://github.com/wdas/reposado
#-add variables to specify custom repositories branches for each OS versión 
#-added easy personalization for your own catalog update server changing 
#a few variables at the top of this script
#-changed code for easy creation of new catalogs for new OS version
#-Better machine catalog detecttion using company domain
#-Added computer OS detecttion
###############################################

# Fill your Own data 
my $ownserver = "yoursserver.yourdomain.es";
my $ownport = "80";
my $owncompany= "YourCompany's";

##### Do not touch below these lines ###########


BEGIN { 
	use File::Basename;
	unshift @INC, dirname($0);
}
#use strict;
use Pashua;
#use Data::Dumper;
#sub osascript($) { print Dumper(['/usr/bin/osascript', map { ('-e', $_) } split(/[\r\n]+/, $_[0])]); }
sub osascript($) { system '/usr/bin/osascript', map { ('-e', $_) } split(/[\r\n]+/, $_[0]); }


# OS detection

# Modify to your own reposado branches if necessary, this values ok by default for reposado server
my $tigerurl = "content/catalogs/index.sucatalog";
my $leopardurl = "content/catalogs/others/index-leopard.merged-1.sucatalog";
my $snowleopardurl = "content/catalogs/others/index-leopard-snowleopard.merged-1.sucatalog";
my $lionurl = "content/catalogs/others/index-lion-snowleopard-leopard.merged-1.sucatalog";
my $mountainlionurl = "content/catalogs/others/index-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog";
my $mavericksurl = "content/catalogs/others/index-10.9-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog";
my $yosemiteurl = "content/catalogs/others/index-10.10-10.9-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog";

$sw_vers = `/usr/bin/sw_vers | /usr/bin/grep ProductVersion | /usr/bin/cut -c17-21`;

if ($sw_vers =~ /10.4./) {
     $exturl = "$tigerurl";
   	} elsif ($sw_vers =~ /10.5./) {
      $exturl = "$leopardurl";
	} elsif ($sw_vers =~ /10.6./) {
      $exturl = "$snowleopardurl";
	} elsif ($sw_vers =~ /10.7./) {
      $exturl = "$lionurl";
	} elsif ($sw_vers =~ /10.8./) {
      $exturl = "$mountainlionurl";
	} elsif ($sw_vers =~ /10.9./) {
      $exturl = "$mavericksurl";
	} elsif ($sw_vers =~ /10.10./) {
      $exturl = "$yosemiteurl";
    } else {
       print "We don´t know about $sw_vers Please Update\n " ;
    }

my $home  = $ENV{"HOME"};
my $plist = "/Library/Preferences/com.apple.SoftwareUpdate";
my $baseurl = "http://$ownserver:$ownport/";
my $url = "$baseurl$exturl";
my $catalogurl = `/usr/bin/defaults read $plist CatalogURL 2>&1`; chomp($catalogurl);

if ($catalogurl =~ /$ownserver/)
{
	$currentSUS = $owncompany;
}
else
{
	$currentSUS = "Apple's";
}

my $conf = <<EOCONF;
*.transparency=1
*.title = Configure Software Update Server

text.type = text
text.default = You are configured to use $currentSUS Software Update Server.

select.type = radiobutton
select.label = Which Software Update Server do you want to use?
select.option = Use $owncompany Software Update Server
select.option = Use Apple's Software Update Server
select.default = Use $currentSUS Software Update Server

okay.type = defaultbutton
okay.label = Configure
cancel.type = cancelbutton
cancel.label = Cancel

EOCONF

# Pass the configuration string to the Pashua module
my %result = Pashua::run($conf);

if (%result)
{
	exit if ($result{"cancel"} == 1);

	if ($result{"select"} eq "Use $owncompany Software Update Server")
	{
		if ($currentSUS ne "$owncompany")
		{
			# defaults write
			osascript <<EOSCRIPT;
do shell script "/usr/bin/defaults write $plist CatalogURL $url" with administrator privileges
EOSCRIPT
		}
	}
	else # Use Apple's Software Update Server
	{
		if ($currentSUS ne "Apple's")
		{
			# defaults delete
			osascript <<EOSCRIPT;
do shell script "/usr/bin/defaults delete $plist CatalogURL" with administrator privileges
EOSCRIPT
		}
	}

	my $catalogurl = `/usr/bin/defaults read $plist CatalogURL 2>&1`; chomp($catalogurl);
	if ($catalogurl =~ /$ownserver/) { $currentSUS = $owncompany; }
	else                     { $currentSUS = "Apple's";      }

	$conf = <<EOCONF;
*.transparency=1
*.title = Configure Software Update Server

text.type = text
text.width = 320
text.default = You are configured to use $currentSUS Software Update Server.
EOCONF
	my %ignore = Pashua::run($conf);
}
